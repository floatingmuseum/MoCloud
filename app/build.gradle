apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-kapt'
//apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all{variant->
            variant.buildConfigField "String","TraktID","\""+getID()+"\""
        }

        applicationVariants.all{variant->
            variant.buildConfigField "String","TraktSecret","\""+getSecret()+"\""
        }

        applicationVariants.all{variant->
            variant.buildConfigField "String","FanrtApiKey","\""+getFanartApiKey()+"\""
        }

        applicationVariants.all{variant->
            variant.buildConfigField "String","TmdbApiKey","\""+getTmdbApiKey()+"\""
        }

        applicationVariants.all{variant->
            variant.buildConfigField "String","YoutubeKey","\""+getYoutubeKey()+"\""
        }
    }


}

def getID(){
    def Properties properties = new Properties();
    properties.load(new FileInputStream(new File('secrets.properties')))
    return properties['TraktID'];
}

def getSecret(){
    def Properties properties = new Properties();
    properties.load(new FileInputStream(new File('secrets.properties')))
    return properties['TraktSecret'];
}

def getFanartApiKey(){
    def Properties properties = new Properties();
    properties.load(new  FileInputStream(new File('secrets.properties')))
    return properties['FanartApiKey']
}

def getTmdbApiKey(){
    def Properties properties = new Properties();
    properties.load(new  FileInputStream(new File('secrets.properties')))
    return properties['TmdbApiKey']
}

def getYoutubeKey(){
    def Properties properties = new Properties();
    properties.load(new  FileInputStream(new File('secrets.properties')))
    return properties['YoutubeKey']
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation files('libs/YouTubeAndroidPlayerApi.jar')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:palette-v7:27.1.1'

    implementation 'com.jakewharton:butterknife:8.8.1'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.github.chrisbanes.photoview:library:1.2.4'
    implementation "io.reactivex.rxjava2:rxjava:2.1.9"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.38'
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    implementation 'com.daimajia.numberprogressbar:library:1.4@aar'
    //    compile 'com.flyco.labelview:FlycoLabelView_Lib:1.0.2@aar'

    //    compile 'com.github.shts:TriangleLabelView:1.1.2'

    //加载动画
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.squareup.okio:okio:1.14.0'
    //阻塞检查
    debugImplementation 'com.github.markzhai:blockcanary-android:1.5.0'
    releaseImplementation 'com.github.markzhai:blockcanary-no-op:1.5.0'
    //内存泄漏检查
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    implementation 'org.greenrobot:eventbus:3.0.0'
//    implementation 'com.facebook.stetho:stetho:1.4.1'
//    implementation 'com.uphyca:stetho_realm:2.0.0'
    implementation 'com.github.medyo:fancybuttons:1.8.3'
    implementation 'com.github.anzaizai:EasyRefreshLayout:1.1.5'
    implementation 'com.yarolegovich:discrete-scrollview:1.2.0'
    implementation 'com.github.lzyzsd:circleprogress:1.2.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }
    implementation 'com.android.support:multidex:1.0.3'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.anko:anko:0.10.4'
    implementation 'androidx.core:core-ktx:0.3'
}
repositories {
    mavenCentral()
}
